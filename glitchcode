<!DOCTYPE html>
<html>
  <head>
    <!-- These are the necessary libraries to use p5js, p5js serialport reading, p5js pubnub API -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.9.0/p5.js"></script>
    <script src="https://cdn.pubnub.com/sdk/javascript/pubnub.4.25.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/p5.serialserver@0.0.28/lib/p5.serialport.js"></script>
  </head>

  <body>
    <!-- This is how you initilize the area with Javascript code -->
    <script>
      // CHANGE THIS ONE WITH YOUR PORT NAME
      var portname = "COM16";
      // variable to hold an instance of the serialport library
      let serial;

      // for incoming serial data
      let inData;

      // to breakout the incoming data into five. Since there are four conditions and one to keep track of total time
      var sensor1, sensor2, sensor3, sensor4, sensor5;

      // The first function p5js runs. It runs only one time
      function setup() {
        // Creates the Canvas with the specific dimensions
        createCanvas(500, 500);
        // Calls the function to initialize and read the serialport - Arduino data from USB
        create_serial();
      }

      // Initializes the serailport, reads the data and sets the reading to variables sensor1 and sensor2.
      // Prints out the current updates on the console.log
      function create_serial() {
        serial = new p5.SerialPort(); // make a new instance of the serialport library
        serial.on("list", printList); // set a callback function for the serialport list event
        serial.on("connected", serverConnected); // callback for connecting to the server
        serial.on("open", portOpen); // callback for the port opening
        serial.on("data", serialEvent); // callback for when new data arrives
        serial.on("error", serialError); // callback for errors
        serial.on("close", portClose); // callback for the port closing

        serial.list(); // list the serial ports
        serial.open(portname); // open a serial port
        // get the list of ports:
        function printList(portList) {
          // portList is an array of serial port names
          for (var i = 0; i < portList.length; i++) {
            // Display the list the console:
            console.log(i + " " + portList[i]);
          }
        }

        function serverConnected() {
          console.log("connected to server.");
        }

        function portOpen() {
          console.log("the serial port opened.");
        }

        function serialEvent() {
          // read a string from the serial port:
          var inString = serial.readLine();
          // check to see that there's actually a string there:

          if (inString.length > 0) {
            // convert it to a number:
            //split the values at each comma
            //  inData = Number(inString);
            var inDataArray = split(inString, ",");

            //set variables to the appropriate index of this array
            //turn these values from a string to a number
            sensor1 = Number(inDataArray[0]);
            sensor2 = Number(inDataArray[1]);
            sensor3 = Number(inDataArray[2]);
            sensor4 = Number(inDataArray[3]);
            sensor5 = Number(inDataArray[4]);
          }
        }

        function serialError(err) {
          console.log("Something went wrong with the serial port. " + err);
        }

        function portClose() {
          console.log("The serial port closed.");
        }
      }

      // this function is called in every second according to the framerate value.
      function draw() {
        // Updates each scene according to the Serial Reading
        update_scene();
      }

      // Updates the scene with the port reading
      function update_scene() {
        // Updates the background with a new one. This is how you clean the canvas each time
        background(255);
        // Prints out the reading from your microprocessor
        textSize(32);
        fill(0, 102, 153);

        text("Hit", 10, 30);
        text(sensor1, 10, 60);

        text("False Alarm", 10, 100);
        text(sensor2, 10, 130);

        text("Miss", 10, 170);
        text(sensor3, 10, 200);

        text("Correct Reject", 10, 240);
        text(sensor4, 10, 270);

        text("Total Number of Trials", 10, 310);
        text(sensor5, 10, 340);
      }
    </script>
  </body>
</html>
